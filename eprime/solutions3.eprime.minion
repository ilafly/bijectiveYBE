MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 54
# CSE_active_eliminated_expressions = 108
# CSE_active_total_size = 378
**VARIABLES**
DISCRETE S_00001_00001 #
{1..3}
DISCRETE S_00001_00002 #
{1..3}
DISCRETE S_00001_00003 #
{1..3}
DISCRETE S_00002_00001 #
{1..3}
DISCRETE S_00002_00002 #
{1..3}
DISCRETE S_00002_00003 #
{1..3}
DISCRETE S_00003_00001 #
{1..3}
DISCRETE S_00003_00002 #
{1..3}
DISCRETE S_00003_00003 #
{1..3}
DISCRETE T_00001_00001 #
{1..3}
DISCRETE T_00001_00002 #
{1..3}
DISCRETE T_00001_00003 #
{1..3}
DISCRETE T_00002_00001 #
{1..3}
DISCRETE T_00002_00002 #
{1..3}
DISCRETE T_00002_00003 #
{1..3}
DISCRETE T_00003_00001 #
{1..3}
DISCRETE T_00003_00002 #
{1..3}
DISCRETE T_00003_00003 #
{1..3}
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00002_00002)
{1..3}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00002_00001)
{1..3}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00002_00003)
{1..3}
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00002_00001)
{1..3}
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00002_00003)
{1..3}
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00002_00002)
{1..3}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00002_00003)
{1..3}
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00002_00002)
{1..3}
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00002_00001)
{1..3}
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00002_00003)
{1..3}
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00002_00002)
{1..3}
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00002_00001)
{1..3}
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00002_00002)
{1..3}
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00002_00001)
{1..3}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00002_00003)
{1..3}
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00002_00001)
{1..3}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00002_00003)
{1..3}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00002_00002)
{1..3}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00001_00003)
{1..3}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00001_00002)
{1..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00001_00001)
{1..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00001_00002)
{1..3}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00001_00001)
{1..3}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00001_00003)
{1..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00001_00003)
{1..3}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00001_00002)
{1..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00001_00001)
{1..3}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00001_00001)
{1..3}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00001_00003)
{1..3}
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00001_00002)
{1..3}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00001_00001)
{1..3}
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00001_00003)
{1..3}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00001_00002)
{1..3}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00001_00003)
{1..3}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00001_00002)
{1..3}
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00001_00001)
{1..3}
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00003_00003)
{1..3}
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00003_00002)
{1..3}
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00001, T_00002_00001, T_00003_00001], S_00003_00001)
{1..3}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00003_00001)
{1..3}
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00003_00003)
{1..3}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00003, T_00002_00003, T_00003_00003], S_00003_00002)
{1..3}
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00003_00003)
{1..3}
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00003_00002)
{1..3}
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([T_00001_00002, T_00002_00002, T_00003_00002], S_00003_00001)
{1..3}
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00003_00003)
{1..3}
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00003_00002)
{1..3}
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00001, S_00002_00001, S_00003_00001], T_00003_00001)
{1..3}
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00003_00002)
{1..3}
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00003_00001)
{1..3}
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00002, S_00002_00002, S_00003_00002], T_00003_00003)
{1..3}
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00003_00003)
{1..3}
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00003_00002)
{1..3}
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([S_00001_00003, S_00002_00003, S_00003_00003], T_00003_00001)
{1..3}
DISCRETE aux54 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00001 + -3 + aux26)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00001_00001)
{1..3}
DISCRETE aux55 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00001 + -3 + aux22)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00001_00002)
{1..3}
DISCRETE aux56 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00001 + -3 + aux20)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00001_00003)
{1..3}
DISCRETE aux57 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00002_00001) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00002 + -3 + aux1))
{1..3}
DISCRETE aux58 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00002_00002) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00002 + -3 + aux3))
{1..3}
DISCRETE aux59 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00002_00003) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00002 + -3 + aux8))
{1..3}
DISCRETE aux60 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00003_00001) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00003 + -3 + aux47))
{1..3}
DISCRETE aux61 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00003_00002) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00003 + -3 + aux49))
{1..3}
DISCRETE aux62 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003], S_00003_00003) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (3*S_00001_00003 + -3 + aux53))
{1..3}
DISCRETE aux63 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux25 + 3*S_00002_00001)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00001)
{1..3}
DISCRETE aux64 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux21 + 3*S_00002_00001)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00002)
{1..3}
DISCRETE aux65 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux19 + 3*S_00002_00001)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00003)
{1..3}
DISCRETE aux66 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00002_00001) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux0 + 3*S_00002_00002))
{1..3}
DISCRETE aux67 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00002_00002) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux5 + 3*S_00002_00002))
{1..3}
DISCRETE aux68 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00002_00003) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux7 + 3*S_00002_00002))
{1..3}
DISCRETE aux69 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00001) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux46 + 3*S_00002_00003))
{1..3}
DISCRETE aux70 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00002) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux48 + 3*S_00002_00003))
{1..3}
DISCRETE aux71 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00003) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux52 + 3*S_00002_00003))
{1..3}
DISCRETE aux72 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux24 + 3*S_00003_00001)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00001)
{1..3}
DISCRETE aux73 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux23 + 3*S_00003_00001)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00002)
{1..3}
DISCRETE aux74 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux18 + 3*S_00003_00001)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00003)
{1..3}
DISCRETE aux75 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00002_00001) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux2 + 3*S_00003_00002))
{1..3}
DISCRETE aux76 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00002_00002) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux4 + 3*S_00003_00002))
{1..3}
DISCRETE aux77 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00002_00003) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux6 + 3*S_00003_00002))
{1..3}
DISCRETE aux78 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux45 + 3*S_00003_00003)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00001)
{1..3}
DISCRETE aux79 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux50 + 3*S_00003_00003)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00002)
{1..3}
DISCRETE aux80 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + aux51 + 3*S_00003_00003)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00003)
{1..3}
DISCRETE aux81 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00001_00001) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00001 + -3 + aux30))
{1..3}
DISCRETE aux82 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux32 + 3*T_00002_00001)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00001_00001)
{1..3}
DISCRETE aux83 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux31 + 3*T_00003_00001)) --- ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00001_00001)
{1..3}
DISCRETE aux84 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00002_00001) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00002 + -3 + aux13))
{1..3}
DISCRETE aux85 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux12 + 3*T_00002_00002)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00002_00001)
{1..3}
DISCRETE aux86 #ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00002_00001) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux14 + 3*T_00003_00002))
{1..3}
DISCRETE aux87 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00003_00001) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00003 + -3 + aux38))
{1..3}
DISCRETE aux88 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux37 + 3*T_00002_00003)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00003_00001)
{1..3}
DISCRETE aux89 #ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00003_00001) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux36 + 3*T_00003_00003))
{1..3}
DISCRETE aux90 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00001_00002) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00001 + -3 + aux35))
{1..3}
DISCRETE aux91 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux34 + 3*T_00002_00001)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00001_00002)
{1..3}
DISCRETE aux92 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux33 + 3*T_00003_00001)) --- ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00001_00002)
{1..3}
DISCRETE aux93 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00002_00002) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00002 + -3 + aux15))
{1..3}
DISCRETE aux94 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux17 + 3*T_00002_00002)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00002_00002)
{1..3}
DISCRETE aux95 #ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00002_00002) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux16 + 3*T_00003_00002))
{1..3}
DISCRETE aux96 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00003_00002) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00003 + -3 + aux44))
{1..3}
DISCRETE aux97 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux43 + 3*T_00002_00003)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00003_00002)
{1..3}
DISCRETE aux98 #ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00003_00002) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux42 + 3*T_00003_00003))
{1..3}
DISCRETE aux99 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00001_00003) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00001 + -3 + aux27))
{1..3}
DISCRETE aux100 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux29 + 3*T_00002_00001)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00001_00003)
{1..3}
DISCRETE aux101 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux28 + 3*T_00003_00001)) --- ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00001_00003)
{1..3}
DISCRETE aux102 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00002_00003) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00002 + -3 + aux11))
{1..3}
DISCRETE aux103 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux10 + 3*T_00002_00002)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00002_00003)
{1..3}
DISCRETE aux104 #ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00002_00003) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux9 + 3*T_00003_00002))
{1..3}
DISCRETE aux105 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003], T_00003_00003) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (3*T_00001_00003 + -3 + aux39))
{1..3}
DISCRETE aux106 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux41 + 3*T_00002_00003)) --- ElementOne([T_00002_00001, T_00002_00002, T_00002_00003], T_00003_00003)
{1..3}
DISCRETE aux107 #ElementOne([T_00003_00001, T_00003_00002, T_00003_00003], T_00003_00003) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + aux40 + 3*T_00003_00003))
{1..3}
DISCRETE aux108 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00001 + -3 + 3*aux26)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00001 + -3 + 3*aux30))
{1..3}
DISCRETE aux109 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00001 + -3 + 3*aux22)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux32 + T_00002_00001))
{1..3}
DISCRETE aux110 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux31 + T_00003_00001)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00001 + -3 + 3*aux20))
{1..3}
DISCRETE aux111 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00002 + -3 + 3*aux1)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00002 + -3 + 3*aux13))
{1..3}
DISCRETE aux112 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00002 + -3 + 3*aux3)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux12 + T_00002_00002))
{1..3}
DISCRETE aux113 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00002 + -3 + 3*aux8)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux14 + T_00003_00002))
{1..3}
DISCRETE aux114 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00003 + -3 + 3*aux47)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00003 + -3 + 3*aux38))
{1..3}
DISCRETE aux115 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00003 + -3 + 3*aux49)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux37 + T_00002_00003))
{1..3}
DISCRETE aux116 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux36 + T_00003_00003)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (S_00001_00003 + -3 + 3*aux53))
{1..3}
DISCRETE aux117 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux25 + S_00002_00001)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00001 + -3 + 3*aux35))
{1..3}
DISCRETE aux118 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux21 + S_00002_00001)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux34 + T_00002_00001))
{1..3}
DISCRETE aux119 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux33 + T_00003_00001)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux19 + S_00002_00001))
{1..3}
DISCRETE aux120 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00002 + -3 + 3*aux15)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux0 + S_00002_00002))
{1..3}
DISCRETE aux121 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux17 + T_00002_00002)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux5 + S_00002_00002))
{1..3}
DISCRETE aux122 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux16 + T_00003_00002)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux7 + S_00002_00002))
{1..3}
DISCRETE aux123 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux46 + S_00002_00003)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00003 + -3 + 3*aux44))
{1..3}
DISCRETE aux124 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux48 + S_00002_00003)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux43 + T_00002_00003))
{1..3}
DISCRETE aux125 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux42 + T_00003_00003)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux52 + S_00002_00003))
{1..3}
DISCRETE aux126 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00001 + -3 + 3*aux27)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux24 + S_00003_00001))
{1..3}
DISCRETE aux127 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux29 + T_00002_00001)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux23 + S_00003_00001))
{1..3}
DISCRETE aux128 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux28 + T_00003_00001)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux18 + S_00003_00001))
{1..3}
DISCRETE aux129 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux2 + S_00003_00002)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00002 + -3 + 3*aux11))
{1..3}
DISCRETE aux130 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux4 + S_00003_00002)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux10 + T_00002_00002))
{1..3}
DISCRETE aux131 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux6 + S_00003_00002)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux9 + T_00003_00002))
{1..3}
DISCRETE aux132 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (T_00001_00003 + -3 + 3*aux39)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux45 + S_00003_00003))
{1..3}
DISCRETE aux133 #ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux50 + S_00003_00003)) --- ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux41 + T_00002_00003))
{1..3}
DISCRETE aux134 #ElementOne([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], (-3 + 3*aux40 + T_00003_00003)) --- ElementOne([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], (-3 + 3*aux51 + S_00003_00003))
{1..3}
DISCRETE aux135 #(3*S_00001_00001 + -3 + aux26)
{1..9}
DISCRETE aux136 #(3*S_00001_00001 + -3 + aux22)
{1..9}
DISCRETE aux137 #(3*S_00001_00001 + -3 + aux20)
{1..9}
DISCRETE aux138 #(3*S_00001_00002 + -3 + aux1)
{1..9}
DISCRETE aux139 #(3*S_00001_00002 + -3 + aux3)
{1..9}
DISCRETE aux140 #(3*S_00001_00002 + -3 + aux8)
{1..9}
DISCRETE aux141 #(3*S_00001_00003 + -3 + aux47)
{1..9}
DISCRETE aux142 #(3*S_00001_00003 + -3 + aux49)
{1..9}
DISCRETE aux143 #(3*S_00001_00003 + -3 + aux53)
{1..9}
DISCRETE aux144 #(-3 + aux25 + 3*S_00002_00001)
{1..9}
DISCRETE aux145 #(-3 + aux21 + 3*S_00002_00001)
{1..9}
DISCRETE aux146 #(-3 + aux19 + 3*S_00002_00001)
{1..9}
DISCRETE aux147 #(-3 + aux0 + 3*S_00002_00002)
{1..9}
DISCRETE aux148 #(-3 + aux5 + 3*S_00002_00002)
{1..9}
DISCRETE aux149 #(-3 + aux7 + 3*S_00002_00002)
{1..9}
DISCRETE aux150 #(-3 + aux46 + 3*S_00002_00003)
{1..9}
DISCRETE aux151 #(-3 + aux48 + 3*S_00002_00003)
{1..9}
DISCRETE aux152 #(-3 + aux52 + 3*S_00002_00003)
{1..9}
DISCRETE aux153 #(-3 + aux24 + 3*S_00003_00001)
{1..9}
DISCRETE aux154 #(-3 + aux23 + 3*S_00003_00001)
{1..9}
DISCRETE aux155 #(-3 + aux18 + 3*S_00003_00001)
{1..9}
DISCRETE aux156 #(-3 + aux2 + 3*S_00003_00002)
{1..9}
DISCRETE aux157 #(-3 + aux4 + 3*S_00003_00002)
{1..9}
DISCRETE aux158 #(-3 + aux6 + 3*S_00003_00002)
{1..9}
DISCRETE aux159 #(-3 + aux45 + 3*S_00003_00003)
{1..9}
DISCRETE aux160 #(-3 + aux50 + 3*S_00003_00003)
{1..9}
DISCRETE aux161 #(-3 + aux51 + 3*S_00003_00003)
{1..9}
DISCRETE aux162 #(3*T_00001_00001 + -3 + aux30)
{1..9}
DISCRETE aux163 #(-3 + aux32 + 3*T_00002_00001)
{1..9}
DISCRETE aux164 #(-3 + aux31 + 3*T_00003_00001)
{1..9}
DISCRETE aux165 #(3*T_00001_00002 + -3 + aux13)
{1..9}
DISCRETE aux166 #(-3 + aux12 + 3*T_00002_00002)
{1..9}
DISCRETE aux167 #(-3 + aux14 + 3*T_00003_00002)
{1..9}
DISCRETE aux168 #(3*T_00001_00003 + -3 + aux38)
{1..9}
DISCRETE aux169 #(-3 + aux37 + 3*T_00002_00003)
{1..9}
DISCRETE aux170 #(-3 + aux36 + 3*T_00003_00003)
{1..9}
DISCRETE aux171 #(3*T_00001_00001 + -3 + aux35)
{1..9}
DISCRETE aux172 #(-3 + aux34 + 3*T_00002_00001)
{1..9}
DISCRETE aux173 #(-3 + aux33 + 3*T_00003_00001)
{1..9}
DISCRETE aux174 #(3*T_00001_00002 + -3 + aux15)
{1..9}
DISCRETE aux175 #(-3 + aux17 + 3*T_00002_00002)
{1..9}
DISCRETE aux176 #(-3 + aux16 + 3*T_00003_00002)
{1..9}
DISCRETE aux177 #(3*T_00001_00003 + -3 + aux44)
{1..9}
DISCRETE aux178 #(-3 + aux43 + 3*T_00002_00003)
{1..9}
DISCRETE aux179 #(-3 + aux42 + 3*T_00003_00003)
{1..9}
DISCRETE aux180 #(3*T_00001_00001 + -3 + aux27)
{1..9}
DISCRETE aux181 #(-3 + aux29 + 3*T_00002_00001)
{1..9}
DISCRETE aux182 #(-3 + aux28 + 3*T_00003_00001)
{1..9}
DISCRETE aux183 #(3*T_00001_00002 + -3 + aux11)
{1..9}
DISCRETE aux184 #(-3 + aux10 + 3*T_00002_00002)
{1..9}
DISCRETE aux185 #(-3 + aux9 + 3*T_00003_00002)
{1..9}
DISCRETE aux186 #(3*T_00001_00003 + -3 + aux39)
{1..9}
DISCRETE aux187 #(-3 + aux41 + 3*T_00002_00003)
{1..9}
DISCRETE aux188 #(-3 + aux40 + 3*T_00003_00003)
{1..9}
DISCRETE aux189 #(S_00001_00001 + -3 + 3*aux26)
{1..9}
DISCRETE aux190 #(T_00001_00001 + -3 + 3*aux30)
{1..9}
DISCRETE aux191 #(S_00001_00001 + -3 + 3*aux22)
{1..9}
DISCRETE aux192 #(-3 + 3*aux32 + T_00002_00001)
{1..9}
DISCRETE aux193 #(-3 + 3*aux31 + T_00003_00001)
{1..9}
DISCRETE aux194 #(S_00001_00001 + -3 + 3*aux20)
{1..9}
DISCRETE aux195 #(S_00001_00002 + -3 + 3*aux1)
{1..9}
DISCRETE aux196 #(T_00001_00002 + -3 + 3*aux13)
{1..9}
DISCRETE aux197 #(S_00001_00002 + -3 + 3*aux3)
{1..9}
DISCRETE aux198 #(-3 + 3*aux12 + T_00002_00002)
{1..9}
DISCRETE aux199 #(S_00001_00002 + -3 + 3*aux8)
{1..9}
DISCRETE aux200 #(-3 + 3*aux14 + T_00003_00002)
{1..9}
DISCRETE aux201 #(S_00001_00003 + -3 + 3*aux47)
{1..9}
DISCRETE aux202 #(T_00001_00003 + -3 + 3*aux38)
{1..9}
DISCRETE aux203 #(S_00001_00003 + -3 + 3*aux49)
{1..9}
DISCRETE aux204 #(-3 + 3*aux37 + T_00002_00003)
{1..9}
DISCRETE aux205 #(-3 + 3*aux36 + T_00003_00003)
{1..9}
DISCRETE aux206 #(S_00001_00003 + -3 + 3*aux53)
{1..9}
DISCRETE aux207 #(-3 + 3*aux25 + S_00002_00001)
{1..9}
DISCRETE aux208 #(T_00001_00001 + -3 + 3*aux35)
{1..9}
DISCRETE aux209 #(-3 + 3*aux21 + S_00002_00001)
{1..9}
DISCRETE aux210 #(-3 + 3*aux34 + T_00002_00001)
{1..9}
DISCRETE aux211 #(-3 + 3*aux33 + T_00003_00001)
{1..9}
DISCRETE aux212 #(-3 + 3*aux19 + S_00002_00001)
{1..9}
DISCRETE aux213 #(T_00001_00002 + -3 + 3*aux15)
{1..9}
DISCRETE aux214 #(-3 + 3*aux0 + S_00002_00002)
{1..9}
DISCRETE aux215 #(-3 + 3*aux17 + T_00002_00002)
{1..9}
DISCRETE aux216 #(-3 + 3*aux5 + S_00002_00002)
{1..9}
DISCRETE aux217 #(-3 + 3*aux16 + T_00003_00002)
{1..9}
DISCRETE aux218 #(-3 + 3*aux7 + S_00002_00002)
{1..9}
DISCRETE aux219 #(-3 + 3*aux46 + S_00002_00003)
{1..9}
DISCRETE aux220 #(T_00001_00003 + -3 + 3*aux44)
{1..9}
DISCRETE aux221 #(-3 + 3*aux48 + S_00002_00003)
{1..9}
DISCRETE aux222 #(-3 + 3*aux43 + T_00002_00003)
{1..9}
DISCRETE aux223 #(-3 + 3*aux42 + T_00003_00003)
{1..9}
DISCRETE aux224 #(-3 + 3*aux52 + S_00002_00003)
{1..9}
DISCRETE aux225 #(T_00001_00001 + -3 + 3*aux27)
{1..9}
DISCRETE aux226 #(-3 + 3*aux24 + S_00003_00001)
{1..9}
DISCRETE aux227 #(-3 + 3*aux29 + T_00002_00001)
{1..9}
DISCRETE aux228 #(-3 + 3*aux23 + S_00003_00001)
{1..9}
DISCRETE aux229 #(-3 + 3*aux28 + T_00003_00001)
{1..9}
DISCRETE aux230 #(-3 + 3*aux18 + S_00003_00001)
{1..9}
DISCRETE aux231 #(-3 + 3*aux2 + S_00003_00002)
{1..9}
DISCRETE aux232 #(T_00001_00002 + -3 + 3*aux11)
{1..9}
DISCRETE aux233 #(-3 + 3*aux4 + S_00003_00002)
{1..9}
DISCRETE aux234 #(-3 + 3*aux10 + T_00002_00002)
{1..9}
DISCRETE aux235 #(-3 + 3*aux6 + S_00003_00002)
{1..9}
DISCRETE aux236 #(-3 + 3*aux9 + T_00003_00002)
{1..9}
DISCRETE aux237 #(T_00001_00003 + -3 + 3*aux39)
{1..9}
DISCRETE aux238 #(-3 + 3*aux45 + S_00003_00003)
{1..9}
DISCRETE aux239 #(-3 + 3*aux50 + S_00003_00003)
{1..9}
DISCRETE aux240 #(-3 + 3*aux41 + T_00002_00003)
{1..9}
DISCRETE aux241 #(-3 + 3*aux40 + T_00003_00003)
{1..9}
DISCRETE aux242 #(-3 + 3*aux51 + S_00003_00003)
{1..9}
**SEARCH**
PRINT[[S_00001_00001],[S_00001_00002],[S_00001_00003],[S_00002_00001],[S_00002_00002],[S_00002_00003],[S_00003_00001],[S_00003_00002],[S_00003_00003],[T_00001_00001],[T_00001_00002],[T_00001_00003],[T_00002_00001],[T_00002_00002],[T_00002_00003],[T_00003_00001],[T_00003_00002],[T_00003_00003]]
VARORDER STATIC [S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003, T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003]
**CONSTRAINTS**
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00002_00002, aux0)
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00002_00001, aux1)
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00002_00003, aux2)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00002_00001, aux3)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00002_00003, aux4)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00002_00002, aux5)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00002_00003, aux6)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00002_00002, aux7)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00002_00001, aux8)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00002_00003, aux9)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00002_00002, aux10)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00002_00001, aux11)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00002_00002, aux12)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00002_00001, aux13)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00002_00003, aux14)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00002_00001, aux15)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00002_00003, aux16)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00002_00002, aux17)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00001_00003, aux18)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00001_00002, aux19)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00001_00001, aux20)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00001_00002, aux21)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00001_00001, aux22)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00001_00003, aux23)
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00001_00003, aux24)
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00001_00002, aux25)
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00001_00001, aux26)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00001_00001, aux27)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00001_00003, aux28)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00001_00002, aux29)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00001_00001, aux30)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00001_00003, aux31)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00001_00002, aux32)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00001_00003, aux33)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00001_00002, aux34)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00001_00001, aux35)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00003_00003, aux36)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00003_00002, aux37)
watchelement_one([T_00001_00001, T_00002_00001, T_00003_00001], S_00003_00001, aux38)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00003_00001, aux39)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00003_00003, aux40)
watchelement_one([T_00001_00003, T_00002_00003, T_00003_00003], S_00003_00002, aux41)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00003_00003, aux42)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00003_00002, aux43)
watchelement_one([T_00001_00002, T_00002_00002, T_00003_00002], S_00003_00001, aux44)
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00003_00003, aux45)
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00003_00002, aux46)
watchelement_one([S_00001_00001, S_00002_00001, S_00003_00001], T_00003_00001, aux47)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00003_00002, aux48)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00003_00001, aux49)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002], T_00003_00003, aux50)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00003_00003, aux51)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00003_00002, aux52)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], T_00003_00001, aux53)
watched-or({watched-and({w-literal(T_00001_00001,1),w-literal(S_00001_00001,1)}),watched-and({w-literal(T_00002_00002,1),w-literal(S_00002_00002,1)}),watched-and({w-literal(T_00002_00003,1),w-literal(S_00003_00002,1)}),watched-and({w-literal(S_00002_00003,1),w-literal(T_00003_00002,1)}),watched-and({w-literal(T_00002_00001,1),w-literal(S_00001_00002,1)}),watched-and({w-literal(S_00002_00001,1),w-literal(T_00001_00002,1)}),watched-and({w-literal(T_00003_00003,1),w-literal(S_00003_00003,1)}),watched-and({w-literal(T_00003_00001,1),w-literal(S_00001_00003,1)}),watched-and({w-literal(S_00003_00001,1),w-literal(T_00001_00003,1)})})
watched-or({watched-and({w-literal(T_00001_00001,2),w-literal(S_00001_00001,1)}),watched-and({w-literal(T_00002_00002,2),w-literal(S_00002_00002,1)}),watched-and({w-literal(T_00002_00003,2),w-literal(S_00003_00002,1)}),watched-and({w-literal(S_00002_00003,1),w-literal(T_00003_00002,2)}),watched-and({w-literal(S_00002_00001,1),w-literal(T_00001_00002,2)}),watched-and({w-literal(T_00002_00001,2),w-literal(S_00001_00002,1)}),watched-and({w-literal(T_00003_00003,2),w-literal(S_00003_00003,1)}),watched-and({w-literal(S_00003_00001,1),w-literal(T_00001_00003,2)}),watched-and({w-literal(T_00003_00001,2),w-literal(S_00001_00003,1)})})
watched-or({watched-and({w-literal(T_00001_00001,3),w-literal(S_00001_00001,1)}),watched-and({w-literal(T_00002_00002,3),w-literal(S_00002_00002,1)}),watched-and({w-literal(T_00002_00003,3),w-literal(S_00003_00002,1)}),watched-and({w-literal(S_00002_00003,1),w-literal(T_00003_00002,3)}),watched-and({w-literal(S_00002_00001,1),w-literal(T_00001_00002,3)}),watched-and({w-literal(T_00002_00001,3),w-literal(S_00001_00002,1)}),watched-and({w-literal(T_00003_00003,3),w-literal(S_00003_00003,1)}),watched-and({w-literal(S_00003_00001,1),w-literal(T_00001_00003,3)}),watched-and({w-literal(T_00003_00001,3),w-literal(S_00001_00003,1)})})
watched-or({watched-and({w-literal(T_00001_00001,1),w-literal(S_00001_00001,2)}),watched-and({w-literal(T_00002_00002,1),w-literal(S_00002_00002,2)}),watched-and({w-literal(T_00002_00003,1),w-literal(S_00003_00002,2)}),watched-and({w-literal(S_00002_00003,2),w-literal(T_00003_00002,1)}),watched-and({w-literal(T_00002_00001,1),w-literal(S_00001_00002,2)}),watched-and({w-literal(S_00002_00001,2),w-literal(T_00001_00002,1)}),watched-and({w-literal(T_00003_00003,1),w-literal(S_00003_00003,2)}),watched-and({w-literal(T_00003_00001,1),w-literal(S_00001_00003,2)}),watched-and({w-literal(S_00003_00001,2),w-literal(T_00001_00003,1)})})
watched-or({watched-and({w-literal(T_00001_00001,2),w-literal(S_00001_00001,2)}),watched-and({w-literal(T_00002_00002,2),w-literal(S_00002_00002,2)}),watched-and({w-literal(T_00002_00003,2),w-literal(S_00003_00002,2)}),watched-and({w-literal(S_00002_00003,2),w-literal(T_00003_00002,2)}),watched-and({w-literal(T_00002_00001,2),w-literal(S_00001_00002,2)}),watched-and({w-literal(S_00002_00001,2),w-literal(T_00001_00002,2)}),watched-and({w-literal(T_00003_00003,2),w-literal(S_00003_00003,2)}),watched-and({w-literal(T_00003_00001,2),w-literal(S_00001_00003,2)}),watched-and({w-literal(S_00003_00001,2),w-literal(T_00001_00003,2)})})
watched-or({watched-and({w-literal(T_00001_00001,3),w-literal(S_00001_00001,2)}),watched-and({w-literal(T_00002_00002,3),w-literal(S_00002_00002,2)}),watched-and({w-literal(T_00002_00003,3),w-literal(S_00003_00002,2)}),watched-and({w-literal(S_00002_00003,2),w-literal(T_00003_00002,3)}),watched-and({w-literal(S_00002_00001,2),w-literal(T_00001_00002,3)}),watched-and({w-literal(T_00002_00001,3),w-literal(S_00001_00002,2)}),watched-and({w-literal(T_00003_00003,3),w-literal(S_00003_00003,2)}),watched-and({w-literal(S_00003_00001,2),w-literal(T_00001_00003,3)}),watched-and({w-literal(T_00003_00001,3),w-literal(S_00001_00003,2)})})
watched-or({watched-and({w-literal(T_00001_00001,1),w-literal(S_00001_00001,3)}),watched-and({w-literal(T_00002_00002,1),w-literal(S_00002_00002,3)}),watched-and({w-literal(T_00002_00003,1),w-literal(S_00003_00002,3)}),watched-and({w-literal(S_00002_00003,3),w-literal(T_00003_00002,1)}),watched-and({w-literal(T_00002_00001,1),w-literal(S_00001_00002,3)}),watched-and({w-literal(S_00002_00001,3),w-literal(T_00001_00002,1)}),watched-and({w-literal(T_00003_00003,1),w-literal(S_00003_00003,3)}),watched-and({w-literal(T_00003_00001,1),w-literal(S_00001_00003,3)}),watched-and({w-literal(S_00003_00001,3),w-literal(T_00001_00003,1)})})
watched-or({watched-and({w-literal(T_00001_00001,2),w-literal(S_00001_00001,3)}),watched-and({w-literal(T_00002_00002,2),w-literal(S_00002_00002,3)}),watched-and({w-literal(T_00002_00003,2),w-literal(S_00003_00002,3)}),watched-and({w-literal(S_00002_00003,3),w-literal(T_00003_00002,2)}),watched-and({w-literal(T_00002_00001,2),w-literal(S_00001_00002,3)}),watched-and({w-literal(S_00002_00001,3),w-literal(T_00001_00002,2)}),watched-and({w-literal(T_00003_00003,2),w-literal(S_00003_00003,3)}),watched-and({w-literal(T_00003_00001,2),w-literal(S_00001_00003,3)}),watched-and({w-literal(S_00003_00001,3),w-literal(T_00001_00003,2)})})
watched-or({watched-and({w-literal(T_00001_00001,3),w-literal(S_00001_00001,3)}),watched-and({w-literal(T_00002_00002,3),w-literal(S_00002_00002,3)}),watched-and({w-literal(T_00002_00003,3),w-literal(S_00003_00002,3)}),watched-and({w-literal(S_00002_00003,3),w-literal(T_00003_00002,3)}),watched-and({w-literal(T_00002_00001,3),w-literal(S_00001_00002,3)}),watched-and({w-literal(S_00002_00001,3),w-literal(T_00001_00002,3)}),watched-and({w-literal(T_00003_00003,3),w-literal(S_00003_00003,3)}),watched-and({w-literal(T_00003_00001,3),w-literal(S_00001_00003,3)}),watched-and({w-literal(S_00003_00001,3),w-literal(T_00001_00003,3)})})
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux135, aux54)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00001_00001, aux54)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux136, aux55)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00001_00002, aux55)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux137, aux56)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00001_00003, aux56)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00002_00001, aux57)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux138, aux57)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00002_00002, aux58)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux139, aux58)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00002_00003, aux59)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux140, aux59)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00003_00001, aux60)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux141, aux60)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00003_00002, aux61)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux142, aux61)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003], S_00003_00003, aux62)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux143, aux62)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux144, aux63)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00001, aux63)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux145, aux64)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00002, aux64)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux146, aux65)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00003, aux65)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00002_00001, aux66)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux147, aux66)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00002_00002, aux67)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux148, aux67)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00002_00003, aux68)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux149, aux68)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00001, aux69)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux150, aux69)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00002, aux70)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux151, aux70)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00003, aux71)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux152, aux71)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux153, aux72)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00001, aux72)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux154, aux73)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00002, aux73)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux155, aux74)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00003, aux74)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00002_00001, aux75)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux156, aux75)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00002_00002, aux76)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux157, aux76)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00002_00003, aux77)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux158, aux77)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux159, aux78)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00001, aux78)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux160, aux79)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00002, aux79)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux161, aux80)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00003, aux80)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00001_00001, aux81)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux162, aux81)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux163, aux82)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00001_00001, aux82)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux164, aux83)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00001_00001, aux83)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00002_00001, aux84)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux165, aux84)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux166, aux85)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00002_00001, aux85)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00002_00001, aux86)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux167, aux86)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00003_00001, aux87)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux168, aux87)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux169, aux88)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00003_00001, aux88)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00003_00001, aux89)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux170, aux89)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00001_00002, aux90)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux171, aux90)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux172, aux91)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00001_00002, aux91)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux173, aux92)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00001_00002, aux92)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00002_00002, aux93)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux174, aux93)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux175, aux94)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00002_00002, aux94)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00002_00002, aux95)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux176, aux95)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00003_00002, aux96)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux177, aux96)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux178, aux97)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00003_00002, aux97)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00003_00002, aux98)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux179, aux98)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00001_00003, aux99)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux180, aux99)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux181, aux100)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00001_00003, aux100)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux182, aux101)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00001_00003, aux101)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00002_00003, aux102)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux183, aux102)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux184, aux103)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00002_00003, aux103)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00002_00003, aux104)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux185, aux104)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003], T_00003_00003, aux105)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux186, aux105)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux187, aux106)
watchelement_one([T_00002_00001, T_00002_00002, T_00002_00003], T_00003_00003, aux106)
watchelement_one([T_00003_00001, T_00003_00002, T_00003_00003], T_00003_00003, aux107)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux188, aux107)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux189, aux108)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux190, aux108)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux191, aux109)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux192, aux109)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux193, aux110)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux194, aux110)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux195, aux111)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux196, aux111)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux197, aux112)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux198, aux112)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux199, aux113)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux200, aux113)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux201, aux114)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux202, aux114)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux203, aux115)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux204, aux115)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux205, aux116)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux206, aux116)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux207, aux117)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux208, aux117)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux209, aux118)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux210, aux118)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux211, aux119)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux212, aux119)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux213, aux120)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux214, aux120)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux215, aux121)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux216, aux121)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux217, aux122)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux218, aux122)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux219, aux123)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux220, aux123)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux221, aux124)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux222, aux124)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux223, aux125)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux224, aux125)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux225, aux126)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux226, aux126)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux227, aux127)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux228, aux127)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux229, aux128)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux230, aux128)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux231, aux129)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux232, aux129)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux233, aux130)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux234, aux130)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux235, aux131)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux236, aux131)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux237, aux132)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux238, aux132)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux239, aux133)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux240, aux133)
watchelement_one([S_00001_00001, S_00001_00002, S_00001_00003, S_00002_00001, S_00002_00002, S_00002_00003, S_00003_00001, S_00003_00002, S_00003_00003], aux241, aux134)
watchelement_one([T_00001_00001, T_00001_00002, T_00001_00003, T_00002_00001, T_00002_00002, T_00002_00003, T_00003_00001, T_00003_00002, T_00003_00003], aux242, aux134)
weightedsumleq([3,1,1],[S_00001_00001,-3,aux26],aux135)
weightedsumgeq([3,1,1],[S_00001_00001,-3,aux26],aux135)
weightedsumleq([3,1,1],[S_00001_00001,-3,aux22],aux136)
weightedsumgeq([3,1,1],[S_00001_00001,-3,aux22],aux136)
weightedsumleq([3,1,1],[S_00001_00001,-3,aux20],aux137)
weightedsumgeq([3,1,1],[S_00001_00001,-3,aux20],aux137)
weightedsumleq([3,1,1],[S_00001_00002,-3,aux1],aux138)
weightedsumgeq([3,1,1],[S_00001_00002,-3,aux1],aux138)
weightedsumleq([3,1,1],[S_00001_00002,-3,aux3],aux139)
weightedsumgeq([3,1,1],[S_00001_00002,-3,aux3],aux139)
weightedsumleq([3,1,1],[S_00001_00002,-3,aux8],aux140)
weightedsumgeq([3,1,1],[S_00001_00002,-3,aux8],aux140)
weightedsumleq([3,1,1],[S_00001_00003,-3,aux47],aux141)
weightedsumgeq([3,1,1],[S_00001_00003,-3,aux47],aux141)
weightedsumleq([3,1,1],[S_00001_00003,-3,aux49],aux142)
weightedsumgeq([3,1,1],[S_00001_00003,-3,aux49],aux142)
weightedsumleq([3,1,1],[S_00001_00003,-3,aux53],aux143)
weightedsumgeq([3,1,1],[S_00001_00003,-3,aux53],aux143)
weightedsumleq([1,1,3],[-3,aux25,S_00002_00001],aux144)
weightedsumgeq([1,1,3],[-3,aux25,S_00002_00001],aux144)
weightedsumleq([1,1,3],[-3,aux21,S_00002_00001],aux145)
weightedsumgeq([1,1,3],[-3,aux21,S_00002_00001],aux145)
weightedsumleq([1,1,3],[-3,aux19,S_00002_00001],aux146)
weightedsumgeq([1,1,3],[-3,aux19,S_00002_00001],aux146)
weightedsumleq([1,1,3],[-3,aux0,S_00002_00002],aux147)
weightedsumgeq([1,1,3],[-3,aux0,S_00002_00002],aux147)
weightedsumleq([1,1,3],[-3,aux5,S_00002_00002],aux148)
weightedsumgeq([1,1,3],[-3,aux5,S_00002_00002],aux148)
weightedsumleq([1,1,3],[-3,aux7,S_00002_00002],aux149)
weightedsumgeq([1,1,3],[-3,aux7,S_00002_00002],aux149)
weightedsumleq([1,1,3],[-3,aux46,S_00002_00003],aux150)
weightedsumgeq([1,1,3],[-3,aux46,S_00002_00003],aux150)
weightedsumleq([1,1,3],[-3,aux48,S_00002_00003],aux151)
weightedsumgeq([1,1,3],[-3,aux48,S_00002_00003],aux151)
weightedsumleq([1,1,3],[-3,aux52,S_00002_00003],aux152)
weightedsumgeq([1,1,3],[-3,aux52,S_00002_00003],aux152)
weightedsumleq([1,1,3],[-3,aux24,S_00003_00001],aux153)
weightedsumgeq([1,1,3],[-3,aux24,S_00003_00001],aux153)
weightedsumleq([1,1,3],[-3,aux23,S_00003_00001],aux154)
weightedsumgeq([1,1,3],[-3,aux23,S_00003_00001],aux154)
weightedsumleq([1,1,3],[-3,aux18,S_00003_00001],aux155)
weightedsumgeq([1,1,3],[-3,aux18,S_00003_00001],aux155)
weightedsumleq([1,1,3],[-3,aux2,S_00003_00002],aux156)
weightedsumgeq([1,1,3],[-3,aux2,S_00003_00002],aux156)
weightedsumleq([1,1,3],[-3,aux4,S_00003_00002],aux157)
weightedsumgeq([1,1,3],[-3,aux4,S_00003_00002],aux157)
weightedsumleq([1,1,3],[-3,aux6,S_00003_00002],aux158)
weightedsumgeq([1,1,3],[-3,aux6,S_00003_00002],aux158)
weightedsumleq([1,1,3],[-3,aux45,S_00003_00003],aux159)
weightedsumgeq([1,1,3],[-3,aux45,S_00003_00003],aux159)
weightedsumleq([1,1,3],[-3,aux50,S_00003_00003],aux160)
weightedsumgeq([1,1,3],[-3,aux50,S_00003_00003],aux160)
weightedsumleq([1,1,3],[-3,aux51,S_00003_00003],aux161)
weightedsumgeq([1,1,3],[-3,aux51,S_00003_00003],aux161)
weightedsumleq([3,1,1],[T_00001_00001,-3,aux30],aux162)
weightedsumgeq([3,1,1],[T_00001_00001,-3,aux30],aux162)
weightedsumleq([1,1,3],[-3,aux32,T_00002_00001],aux163)
weightedsumgeq([1,1,3],[-3,aux32,T_00002_00001],aux163)
weightedsumleq([1,1,3],[-3,aux31,T_00003_00001],aux164)
weightedsumgeq([1,1,3],[-3,aux31,T_00003_00001],aux164)
weightedsumleq([3,1,1],[T_00001_00002,-3,aux13],aux165)
weightedsumgeq([3,1,1],[T_00001_00002,-3,aux13],aux165)
weightedsumleq([1,1,3],[-3,aux12,T_00002_00002],aux166)
weightedsumgeq([1,1,3],[-3,aux12,T_00002_00002],aux166)
weightedsumleq([1,1,3],[-3,aux14,T_00003_00002],aux167)
weightedsumgeq([1,1,3],[-3,aux14,T_00003_00002],aux167)
weightedsumleq([3,1,1],[T_00001_00003,-3,aux38],aux168)
weightedsumgeq([3,1,1],[T_00001_00003,-3,aux38],aux168)
weightedsumleq([1,1,3],[-3,aux37,T_00002_00003],aux169)
weightedsumgeq([1,1,3],[-3,aux37,T_00002_00003],aux169)
weightedsumleq([1,1,3],[-3,aux36,T_00003_00003],aux170)
weightedsumgeq([1,1,3],[-3,aux36,T_00003_00003],aux170)
weightedsumleq([3,1,1],[T_00001_00001,-3,aux35],aux171)
weightedsumgeq([3,1,1],[T_00001_00001,-3,aux35],aux171)
weightedsumleq([1,1,3],[-3,aux34,T_00002_00001],aux172)
weightedsumgeq([1,1,3],[-3,aux34,T_00002_00001],aux172)
weightedsumleq([1,1,3],[-3,aux33,T_00003_00001],aux173)
weightedsumgeq([1,1,3],[-3,aux33,T_00003_00001],aux173)
weightedsumleq([3,1,1],[T_00001_00002,-3,aux15],aux174)
weightedsumgeq([3,1,1],[T_00001_00002,-3,aux15],aux174)
weightedsumleq([1,1,3],[-3,aux17,T_00002_00002],aux175)
weightedsumgeq([1,1,3],[-3,aux17,T_00002_00002],aux175)
weightedsumleq([1,1,3],[-3,aux16,T_00003_00002],aux176)
weightedsumgeq([1,1,3],[-3,aux16,T_00003_00002],aux176)
weightedsumleq([3,1,1],[T_00001_00003,-3,aux44],aux177)
weightedsumgeq([3,1,1],[T_00001_00003,-3,aux44],aux177)
weightedsumleq([1,1,3],[-3,aux43,T_00002_00003],aux178)
weightedsumgeq([1,1,3],[-3,aux43,T_00002_00003],aux178)
weightedsumleq([1,1,3],[-3,aux42,T_00003_00003],aux179)
weightedsumgeq([1,1,3],[-3,aux42,T_00003_00003],aux179)
weightedsumleq([3,1,1],[T_00001_00001,-3,aux27],aux180)
weightedsumgeq([3,1,1],[T_00001_00001,-3,aux27],aux180)
weightedsumleq([1,1,3],[-3,aux29,T_00002_00001],aux181)
weightedsumgeq([1,1,3],[-3,aux29,T_00002_00001],aux181)
weightedsumleq([1,1,3],[-3,aux28,T_00003_00001],aux182)
weightedsumgeq([1,1,3],[-3,aux28,T_00003_00001],aux182)
weightedsumleq([3,1,1],[T_00001_00002,-3,aux11],aux183)
weightedsumgeq([3,1,1],[T_00001_00002,-3,aux11],aux183)
weightedsumleq([1,1,3],[-3,aux10,T_00002_00002],aux184)
weightedsumgeq([1,1,3],[-3,aux10,T_00002_00002],aux184)
weightedsumleq([1,1,3],[-3,aux9,T_00003_00002],aux185)
weightedsumgeq([1,1,3],[-3,aux9,T_00003_00002],aux185)
weightedsumleq([3,1,1],[T_00001_00003,-3,aux39],aux186)
weightedsumgeq([3,1,1],[T_00001_00003,-3,aux39],aux186)
weightedsumleq([1,1,3],[-3,aux41,T_00002_00003],aux187)
weightedsumgeq([1,1,3],[-3,aux41,T_00002_00003],aux187)
weightedsumleq([1,1,3],[-3,aux40,T_00003_00003],aux188)
weightedsumgeq([1,1,3],[-3,aux40,T_00003_00003],aux188)
weightedsumleq([1,1,3],[S_00001_00001,-3,aux26],aux189)
weightedsumgeq([1,1,3],[S_00001_00001,-3,aux26],aux189)
weightedsumleq([1,1,3],[T_00001_00001,-3,aux30],aux190)
weightedsumgeq([1,1,3],[T_00001_00001,-3,aux30],aux190)
weightedsumleq([1,1,3],[S_00001_00001,-3,aux22],aux191)
weightedsumgeq([1,1,3],[S_00001_00001,-3,aux22],aux191)
weightedsumleq([1,3,1],[-3,aux32,T_00002_00001],aux192)
weightedsumgeq([1,3,1],[-3,aux32,T_00002_00001],aux192)
weightedsumleq([1,3,1],[-3,aux31,T_00003_00001],aux193)
weightedsumgeq([1,3,1],[-3,aux31,T_00003_00001],aux193)
weightedsumleq([1,1,3],[S_00001_00001,-3,aux20],aux194)
weightedsumgeq([1,1,3],[S_00001_00001,-3,aux20],aux194)
weightedsumleq([1,1,3],[S_00001_00002,-3,aux1],aux195)
weightedsumgeq([1,1,3],[S_00001_00002,-3,aux1],aux195)
weightedsumleq([1,1,3],[T_00001_00002,-3,aux13],aux196)
weightedsumgeq([1,1,3],[T_00001_00002,-3,aux13],aux196)
weightedsumleq([1,1,3],[S_00001_00002,-3,aux3],aux197)
weightedsumgeq([1,1,3],[S_00001_00002,-3,aux3],aux197)
weightedsumleq([1,3,1],[-3,aux12,T_00002_00002],aux198)
weightedsumgeq([1,3,1],[-3,aux12,T_00002_00002],aux198)
weightedsumleq([1,1,3],[S_00001_00002,-3,aux8],aux199)
weightedsumgeq([1,1,3],[S_00001_00002,-3,aux8],aux199)
weightedsumleq([1,3,1],[-3,aux14,T_00003_00002],aux200)
weightedsumgeq([1,3,1],[-3,aux14,T_00003_00002],aux200)
weightedsumleq([1,1,3],[S_00001_00003,-3,aux47],aux201)
weightedsumgeq([1,1,3],[S_00001_00003,-3,aux47],aux201)
weightedsumleq([1,1,3],[T_00001_00003,-3,aux38],aux202)
weightedsumgeq([1,1,3],[T_00001_00003,-3,aux38],aux202)
weightedsumleq([1,1,3],[S_00001_00003,-3,aux49],aux203)
weightedsumgeq([1,1,3],[S_00001_00003,-3,aux49],aux203)
weightedsumleq([1,3,1],[-3,aux37,T_00002_00003],aux204)
weightedsumgeq([1,3,1],[-3,aux37,T_00002_00003],aux204)
weightedsumleq([1,3,1],[-3,aux36,T_00003_00003],aux205)
weightedsumgeq([1,3,1],[-3,aux36,T_00003_00003],aux205)
weightedsumleq([1,1,3],[S_00001_00003,-3,aux53],aux206)
weightedsumgeq([1,1,3],[S_00001_00003,-3,aux53],aux206)
weightedsumleq([1,3,1],[-3,aux25,S_00002_00001],aux207)
weightedsumgeq([1,3,1],[-3,aux25,S_00002_00001],aux207)
weightedsumleq([1,1,3],[T_00001_00001,-3,aux35],aux208)
weightedsumgeq([1,1,3],[T_00001_00001,-3,aux35],aux208)
weightedsumleq([1,3,1],[-3,aux21,S_00002_00001],aux209)
weightedsumgeq([1,3,1],[-3,aux21,S_00002_00001],aux209)
weightedsumleq([1,3,1],[-3,aux34,T_00002_00001],aux210)
weightedsumgeq([1,3,1],[-3,aux34,T_00002_00001],aux210)
weightedsumleq([1,3,1],[-3,aux33,T_00003_00001],aux211)
weightedsumgeq([1,3,1],[-3,aux33,T_00003_00001],aux211)
weightedsumleq([1,3,1],[-3,aux19,S_00002_00001],aux212)
weightedsumgeq([1,3,1],[-3,aux19,S_00002_00001],aux212)
weightedsumleq([1,1,3],[T_00001_00002,-3,aux15],aux213)
weightedsumgeq([1,1,3],[T_00001_00002,-3,aux15],aux213)
weightedsumleq([1,3,1],[-3,aux0,S_00002_00002],aux214)
weightedsumgeq([1,3,1],[-3,aux0,S_00002_00002],aux214)
weightedsumleq([1,3,1],[-3,aux17,T_00002_00002],aux215)
weightedsumgeq([1,3,1],[-3,aux17,T_00002_00002],aux215)
weightedsumleq([1,3,1],[-3,aux5,S_00002_00002],aux216)
weightedsumgeq([1,3,1],[-3,aux5,S_00002_00002],aux216)
weightedsumleq([1,3,1],[-3,aux16,T_00003_00002],aux217)
weightedsumgeq([1,3,1],[-3,aux16,T_00003_00002],aux217)
weightedsumleq([1,3,1],[-3,aux7,S_00002_00002],aux218)
weightedsumgeq([1,3,1],[-3,aux7,S_00002_00002],aux218)
weightedsumleq([1,3,1],[-3,aux46,S_00002_00003],aux219)
weightedsumgeq([1,3,1],[-3,aux46,S_00002_00003],aux219)
weightedsumleq([1,1,3],[T_00001_00003,-3,aux44],aux220)
weightedsumgeq([1,1,3],[T_00001_00003,-3,aux44],aux220)
weightedsumleq([1,3,1],[-3,aux48,S_00002_00003],aux221)
weightedsumgeq([1,3,1],[-3,aux48,S_00002_00003],aux221)
weightedsumleq([1,3,1],[-3,aux43,T_00002_00003],aux222)
weightedsumgeq([1,3,1],[-3,aux43,T_00002_00003],aux222)
weightedsumleq([1,3,1],[-3,aux42,T_00003_00003],aux223)
weightedsumgeq([1,3,1],[-3,aux42,T_00003_00003],aux223)
weightedsumleq([1,3,1],[-3,aux52,S_00002_00003],aux224)
weightedsumgeq([1,3,1],[-3,aux52,S_00002_00003],aux224)
weightedsumleq([1,1,3],[T_00001_00001,-3,aux27],aux225)
weightedsumgeq([1,1,3],[T_00001_00001,-3,aux27],aux225)
weightedsumleq([1,3,1],[-3,aux24,S_00003_00001],aux226)
weightedsumgeq([1,3,1],[-3,aux24,S_00003_00001],aux226)
weightedsumleq([1,3,1],[-3,aux29,T_00002_00001],aux227)
weightedsumgeq([1,3,1],[-3,aux29,T_00002_00001],aux227)
weightedsumleq([1,3,1],[-3,aux23,S_00003_00001],aux228)
weightedsumgeq([1,3,1],[-3,aux23,S_00003_00001],aux228)
weightedsumleq([1,3,1],[-3,aux28,T_00003_00001],aux229)
weightedsumgeq([1,3,1],[-3,aux28,T_00003_00001],aux229)
weightedsumleq([1,3,1],[-3,aux18,S_00003_00001],aux230)
weightedsumgeq([1,3,1],[-3,aux18,S_00003_00001],aux230)
weightedsumleq([1,3,1],[-3,aux2,S_00003_00002],aux231)
weightedsumgeq([1,3,1],[-3,aux2,S_00003_00002],aux231)
weightedsumleq([1,1,3],[T_00001_00002,-3,aux11],aux232)
weightedsumgeq([1,1,3],[T_00001_00002,-3,aux11],aux232)
weightedsumleq([1,3,1],[-3,aux4,S_00003_00002],aux233)
weightedsumgeq([1,3,1],[-3,aux4,S_00003_00002],aux233)
weightedsumleq([1,3,1],[-3,aux10,T_00002_00002],aux234)
weightedsumgeq([1,3,1],[-3,aux10,T_00002_00002],aux234)
weightedsumleq([1,3,1],[-3,aux6,S_00003_00002],aux235)
weightedsumgeq([1,3,1],[-3,aux6,S_00003_00002],aux235)
weightedsumleq([1,3,1],[-3,aux9,T_00003_00002],aux236)
weightedsumgeq([1,3,1],[-3,aux9,T_00003_00002],aux236)
weightedsumleq([1,1,3],[T_00001_00003,-3,aux39],aux237)
weightedsumgeq([1,1,3],[T_00001_00003,-3,aux39],aux237)
weightedsumleq([1,3,1],[-3,aux45,S_00003_00003],aux238)
weightedsumgeq([1,3,1],[-3,aux45,S_00003_00003],aux238)
weightedsumleq([1,3,1],[-3,aux50,S_00003_00003],aux239)
weightedsumgeq([1,3,1],[-3,aux50,S_00003_00003],aux239)
weightedsumleq([1,3,1],[-3,aux41,T_00002_00003],aux240)
weightedsumgeq([1,3,1],[-3,aux41,T_00002_00003],aux240)
weightedsumleq([1,3,1],[-3,aux40,T_00003_00003],aux241)
weightedsumgeq([1,3,1],[-3,aux40,T_00003_00003],aux241)
weightedsumleq([1,3,1],[-3,aux51,S_00003_00003],aux242)
weightedsumgeq([1,3,1],[-3,aux51,S_00003_00003],aux242)
**EOF**
